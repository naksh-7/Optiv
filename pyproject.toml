[project]
name = "securedoc-ai"
version = "1.0.0"
description = "Advanced Document PII Detection & Logo Removal System"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "SecureDoc AI Team", email = "team@securedoc-ai.com"}
]
keywords = ["pii", "detection", "ocr", "computer-vision", "privacy", "security"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security",
]

# Core dependencies
dependencies = [
    # Core ML/AI
    "torch>=2.0.0",
    "torchvision>=0.15.0", 
    "ultralytics>=8.0.0",
    "opencv-python>=4.8.0",
    
    # OCR
    "easyocr>=1.7.0",
    "pytesseract>=0.3.10",
    "Pillow>=10.0.0",
    
    # PII Detection
    "presidio-analyzer>=2.2.33",
    "presidio-anonymizer>=2.2.33",
    "spacy>=3.6.0",
    "transformers>=4.30.0",
    
    # Data processing
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "regex>=2023.6.3",
    
    # Web frameworks
    "flask>=2.3.0",
    "flask-restx>=1.1.0",
    "flask-cors>=4.0.0",
    "streamlit>=1.25.0",
    
    # Configuration
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "tqdm>=4.65.0",
    "loguru>=0.7.0",
    
    # Utilities
    "requests>=2.31.0",
    "imageio>=2.31.0",
    "click>=8.1.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "notebook>=7.0.0",
    "jupyterlab>=4.0.0",
]

# Production deployment
prod = [
    "gunicorn>=21.2.0",
    "uvicorn[standard]>=0.23.0",
    "redis>=4.6.0",
    "prometheus-client>=0.17.0",
]

# Full installation with all features
full = [
    "gradio>=3.35.0",
    "sqlalchemy>=2.0.0",
    "docker>=6.1.0",
    "aiohttp>=3.8.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/securedoc-ai"
Documentation = "https://github.com/yourusername/securedoc-ai/docs"
Repository = "https://github.com/yourusername/securedoc-ai"
Issues = "https://github.com/yourusername/securedoc-ai/issues"

[project.scripts]
securedoc = "src.cli:main"
securedoc-api = "src.api.app:main"
securedoc-ui = "src.ui.streamlit_app:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=html --cov-report=term"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]